openapi: 3.0.3
info:
  title: chat server
  description: this server does provide a api for chat functionality
  version: 1.0.0
servers:
  - url: 'https:chat.schlagh.com'
components:
  securitySchemes:
    authorization:
      type: authorization
      name: authorization
      in: header
      description: the json web token
  responses:
    NotAllowed:
      description: |
        the operation is not allowed, possible causes:
          no authorization header provided
          token not valid
          the user user does not have the required role for the action
          verification failed
  schemas:
    Message:
      type: object
      properties:
        uid:
          type: integer
          description: the user id from the author of the message
        mid:
          type: integer
          description: the id of the message
        date:
          type: string
          description: the date when the message was written
          format: date-time
        type:
          type: integer
          description: |
            the type of the message
              0:    normalMessage
              1:    statusMessage
        content:
          type: object
          properties:
            text:
              type: string
              description: if normalMessage
            mentions:
              type: array
              description: if normalMessage, not yet implemented
              items:
                type: object
                properties:
                  uid:
                    type: integer
                    description: the uid of the mentioned user
                  textColumn:
                    type: integer
                    description: the column in the text where the user is mentioned
            media:
              type: array
              description: if normalMessage, not yet implemented
            type:
              type: integer
              description: if statusMessage, the type of the statusMessage
            passiveusers:
              type: array
              description: the ids of the passive users mentioned in this statusMessage
              items:
                type: integer
    MessageInput:
      type: object
      properties:
        type:
          type: number
          description: the type of the message, should be 0 - normalMessage
        content:
          type: object
          properties:
            text:
              type: string
              description: the text of the message
            mentions:
              type: array
              items:
                type: object
                properties:
                  uid:
                    type: number
                    description: the id of the mentioned user
                  textColumn:
                    type: number
            media:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: number
                  pathToFile:
                    type: string
paths:
  /auth/login:
    post:
      description: login to get an authentication token
      summary: login
      operationId: login
      parameters:
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        # TODO errors
        '200':
          description: default response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: was the login successfull?
                  username:
                    type: string
                    description: error message for the username
                  password:
                    type: string
                    description: error message for password
                  tokens:
                    type: string
                    description: the authentication token
        '500':
          description: internal server error
  /auth/register:
    post:
      description: create a new account
      summary: register
      operationId: register
      parameters:
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        #TODO errors
        '200':
          description: default response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: was the login successfull?
                  username:
                    type: string
                    description: error message for the username
                  password:
                    type: string
                    description: error message for password
                  tokens:
                    type: string
                    description: the authentication token
        '500':
          description: internal server error
  /chats:
    get:
      description: return all chats of the user
      summary: get all chats
      operationId: getChats
      parameters:
        - $ref: '#components/securitySchemes/authorization'
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: |
                        the type of the chat,
                        either normalChat or groupChat
                    id:
                      type: integer
                      description: the id of the chat
                    chatName:
                      type: string
                      description: the name of the chat
                    members:
                      type: array
                      items:
                        type: object
                        properties:
                          uid:
                            type: integer
                            description: the id of the user
                          username:
                            type: string
                            description: the name of the user
                    firstMessage:
                      $ref: '#components/schemas/Message'
        '400':
          description: timeout
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/all/:uid:
    # TODO
    get:
      description: returns all groups of a specific user, not yet implemented
      summary: get all groups of user
      operationId: getGroupsByUser
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: uid
          in: path
          required: false
          schema:
            type: integer
            description: the id of the user
      responses:
        '501':
          description: not yet implemented
  /group/public:
    # TODO
    get:
      description: returns all public groups, not yet implemented
      summary: get all public groups
      operationId: getGroupsPublic
      parameters:
        - $ref: '#components/securitySchemes/authorization'
      responses:
        '501':
          description: not yet implemented
  /group:
    put:
      description: create a new group
      summary: create a new group
      operationId: createGroup
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              # TODO: remove surrounding 'data'
              data:
                type: object
                properties:
                  name:
                    type: string
                    description: the name of the chat
                  description:
                    type: string
                    description: the description of the chat
                  isPublic:
                    type: boolean
                    description: is the chat public?
              users:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: integer
                      description: the id of the user
                    username:
                      type: string
                      description: the username of the user
                    isAdmin:
                      type: boolean
                      description: will the user be admin in this chat
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  chatId:
                    type: number
                    description: the id of the new groupChat
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid:
    get:
      description: get the info of the groupChat
      summary: get info of groupChat
      operationId: getGroupInfo
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: the type of the chat
                  id:
                    type: integer
                    description: the id of the chat
                  chatName:
                    type: string
                    description: the name of the chat
                  description:
                    type: string
                    description: the description of the chat
                  public:
                    type: boolean
                    description: is the chat public?
                  memberSelf:
                    type: object
                    description: infos about the member who requested the info
                    properties:
                      isAdmin:
                        type: boolean
                        description: is the member who requested the info admin?
                  members:
                    type: array
                    description: all the other members
                    items:
                      type: object
                      properties:
                        uid:
                          type: integer
                          description: the id of the member
                        username:
                          type: string
                          description: the username of the member
                        isAdmin:
                          type: boolean
                          description: is the member admin?
                        gcmid:
                          type: integer
                          description: groupchatmemberId - the id of the groupChatMember
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
    # TODO
    delete:
      description: the group chat will be deleted - not yet implemented
      summary: delete groupChat
      operationId: deleteGroupChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
      responses:
        '501':
          description: not yet implemented
  /group/:gcid/chatName:
    put:
      description: |
        change the name of the group
        requesting user has to be admin
      summary: change name of groupChat
      operationId: changeNameOfGroupChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              chatName:
                type: string
                description: the new name of the chat
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/description:
    put:
      description: |
        change the description of the group
        requesting user has to be admin
      summary: change description of groupChat
      operationId: changeDescriptionOfGroupChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
                description: the new description of the chat
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/member/:uid:
    put:
      description: |
        a new member gets added to the group
        requesting user has to be admin
      summary: add a member to a groupChat
      operationId: addMemberToGroupChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the user who should be added
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
    delete:
      description: |
        a member gets removed from the group
        requesting user has to be admin
      summary: remove a member from a groupChat
      operationId: removeMemberFromGroupChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the user who should be added
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/members:
    put:
      description: |
        new members are added to the group
        requesting user has to be admin
      summary: add multiple members to a groupChat
      operationId: addMembersToGroupChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: integer
                      description: the id of the user
                    username:
                      type: string
                      description: the username of the user
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/member/:uid/giveAdmin:
    post:
      description: |
        admin status is added to the member
        requesting user has to be admin
      summary: give member admin status
      operationId: giveMemberAdminStatus
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the user who should be added
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/member/:uid/removeAdmin:
    post:
      description: |
        admin status is removed from the member
        requesting user has to be admin
      summary: remove admin status from member
      operationId: removeMemberAdminStatus
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
        - name: uid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the user who should be added
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/join:
    post:
      description: only for public chats, chat is joined
      summary: join groupChat
      operationId: joinGroupChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/leave:
    post:
      description: |
        the requesting user leaves the chat
        if admin, there has to be at least one admin left after this action
      summary: user takes away admin rights himself
      operationId: removeAdminSelf
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /group/:gcid/removeAdmin:
    post:
      description: |
        the requesting user takes the admin rights away himself
        requesting user has to be admin
        there has to be at least one admin left after this action
      summary: user takes away admin rights himself
      operationId: removeAdminSelf
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: integer
            description: the id of the chat
      responses:
        '200':
          description: successful
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /message/:
    put:
      description: |
        add a new message
      summary: add new message
      operationId: addMessage
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: body
          in: header
          required: true
          schema:
            $ref: '#components/schemas/MessageInput'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  mid:
                    type: number
                    description: the id of the new message
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /message/add:
    put:
      description: |
        add a new message
      summary: add new message
      operationId: addMessage
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              chatType:
                type: string
                description: |
                  the type of the chat,
                  either normalChat or groupChat
              chatId:
                type: number
                description: the id of the chat
              message:
                $ref: '#components/schemas/MessageInput'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  mid:
                    type: number
                    description: the id of the new message
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /message/load:
    post:
      description: |
        load messages
      summary: load messages
      operationId: loadMessages
      parameters:
      - $ref: '#components/securitySchemes/authorization'
      - name: body
        in: header
        required: true
        schema:
          type: object
          properties:
            chatType:
              type: string
              description: the type of the chat
            chatId:
              type: number
              description: the id of the chat where the messages should be loaded
            lastMsgId:
              type: number
              description: the id of the last message that has been loaded
            num:
              type: number
              description: how many messages should be loaded?
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: |
                      the status of this request
                        reached top:
                          all messages have been loaded, there could be some in the body
                        success:
                          messages loaded, there are some left who are not loaded
                  messages:
                    type: array
                    description: the messages
                    items:
                      $ref: '#components/schemas/Message'
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /pwReset/isValid/:code:
    get:
      description: is the verification code valid?
      summary: is code valid
      operationId: isValid
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: number
            description: the code that should be verfied
      responses:
        '200':
          description: success
        '400':
          description: bad request
        '403':
          description: verification failed
  /pwReset/set:
    post:
      description: set a new password
      summary: set a new password
      operationId: setPassword
      parameters:
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              code:
                type: string
                description: a valid verificationCode
              password:
                type: string
                description: the new password
      responses:
        '200':
          description: success
        '400':
          description: bad request
        '403':
          description: verification failed
  /pwReset/requestLink:
    post:
      description: |
        request a password reset link, an email with the link will be sent
      summary: request a password reset link
      operationId: requestLink
      parameters:
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
                description: the username of the user
              email:
                type: string
                description: the email of the user
      responses:
        '200':
          description: success
        '400':
          description: bad request
  /user/:
    post:
      description: |
        get all users, with search and pagination
      summary: get all users
      operationId: getAllUsers
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              search:
                type: string
                description: after this value should be searched
              limit:
                type: number
                description: how many results should be returned
              start:
                type: number
                description: where to start in the list of results
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: number
                      description: the id of the user
                    username:
                      type: string
                      description: the username of the user
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /user/noChat:
    post:
      description: |
        get users who are not in a private conversation with the requesting user, with search and pagination
      summary: get users not in chat
      operationId: getUsersNotInChat
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              search:
                type: string
                description: after this value should be searched
              limit:
                type: number
                description: how many results should be returned
              start:
                type: number
                description: where to start in the list of results
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: number
                      description: the id of the user
                    username:
                      type: string
                      description: the username of the user
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /user/notInGroup/:gcid:
    post:
      description: |
        get users who are not in the group, with search and pagination
      summary: get users not in group
      operationId: getUsersNotInGroup
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: gcid
          in: path
          required: true
          schema:
            type: number
            description: the id of the groupChat
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              search:
                type: string
                description: after this value should be searched
              limit:
                type: number
                description: how many results should be returned
              start:
                type: number
                description: where to start in the list of results
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: number
                      description: the id of the user
                    username:
                      type: string
                      description: the username of the user
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /user/self:
    get:
      description: |
        get info about the requesting user himself
      summary: get useinfo self
      operationId: getUserInfoSelf
      parameters:
        - $ref: '#components/securitySchemes/authorization'
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: object
                properties:
                  uid:
                    type: number
                    description: the id of the user
                  username:
                    type: string
                    description: the username of the user
                  email:
                    type: string
                    description: the email adress of the user
                  emailVerified:
                    type: boolean
                    description: is the email verified
                  accountCreationTime:
                    type: string
                    description: the datetime when the user was created
                    format: date-time
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /user/:uid:
    get:
      description: |
        get info about the user with this uid
      summary: get userInfo
      operationId: getUserInfo
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: uid
          in: path
          required: true
          schema:
            type: number
            description: the is of the user
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: object
                properties:
                  uidSelf:
                    type: number
                    description: the id of the requesting
                  username:
                    type: string
                    description: the username of the user
                  blocked:
                    type: boolean
                    description: is the user blocked by you?
                  userExists:
                    type: boolean
                    description: does the user exist?
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /user/chat:
    put:
      description: |
        create a new normalChat
      summary: create new NormalChat
      operationId: createNormalChat
      parameters:
      - $ref: '#components/securitySchemes/authorization'
      - name: body
        in: header
        required: true
        schema:
          type: object
          properties:
            uid:
              type: number
              description: the id of the other user
            username:
              type: string
              description: the username of the othe user
            message:
              $ref: '#components/schemas/MessageInput'
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                type: object
                properties:
                  ncid:
                    type: number
                    description: the id of the new chat
                  mid:
                    type: number
                    description: the id of the first message
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
        '500':
          description: internal server error
  /user/setEmail:
    post:
      description: |
        set the email of the user
      summary: set email
      operationId: setEmail
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: body
          in: header
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: the new email address
      responses:
        '200':
          description: success
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'
  /user/verifyEmail:
    get:
      description: |
        verify the email of the user
      summary: verify email
      operationId: verifyEmail
      parameters:
        - $ref: '#components/securitySchemes/authorization'
        - name: code
          in: path
          required: true
          schema:
            type: string
            description: the verification code
      responses:
        '200':
          description: success
        '400':
          description: bad request
        '403':
          $ref: '#components/responses/NotAllowed'



